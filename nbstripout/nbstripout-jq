#!/bin/sh

# This script is pretty close in striping out functionality with
# nbstripout, and supports textconv mode (with -t).
#
#
# It also support a variation of strip out invoked with -d where some
# other bits get preserved. You will probably need to adjust it to
# your needs.
#
# Unlike the original nbstripout it doesn't validate anything but
# filters the content as is. But it does that about 10+ times faster.
#
#
# For instrumenting git to use this script either use the original
# https://github.com/kynan/nbstripout and then rename the settings in
# the config files to nbstripout-jq, or manually add:
#
# .gitconfig:
# [filter "nbstripout"]
#         clean = nbstripout-jq
#         smudge = cat
#         required = true
# [diff "ipynb"]
#         textconv = nbstripout-jq -t
# 
# .gitattributes:
# *.ipynb filter=nbstripout-jq
# 
# *.ipynb diff=ipynb
# 
# For jq docs/examples see:
# https://stedolan.github.io/jq/manual/
# https://github.com/stedolan/jq/wiki/Cookbook

usage() { echo "Usage:\n$0 [-t] [-d]\n-t print to STDOUT\n-d doc mode" 1>&2; exit 1; }

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.
# Initialize our own variables:
docs_mode=
textconv=
while getopts "dth" opt; do
    case "$opt" in
    d) docs_mode=1;;
    t) textconv=1;;
    h) usage;;
    esac
done
shift $((OPTIND-1))

### filter for doc nbs ###

# 1. reset execution_count
# 2. keep only certain cell metadata fields
# 3. keep only certain nb metadata fields

# XXX: needs to strip execution_count field inside outputs

# to add more metadata entries to keep do:
# if (.key == "key1" or .key == "key2")

filter_docs='
   (.cells[] | select(has("execution_count")) | .execution_count) = null
  | .cells[].metadata |= with_entries(
      if (.key == "hide_input")
      then .     # keep the entry
      else empty # delete the entry
      end)
  | .metadata = {"kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}}
'

### filter for code nbs ###

# 1. reset execution_count
# 2. delete cell's outputs
# 3. delete cell's metadata
# 4. keep only certain nb metadata fields

filter_code='
    (.cells[] | select(has("execution_count")) | .execution_count) = null
  | (.cells[] | select(has("outputs")) | .outputs) = []
  | .cells[].metadata = {}
  | .metadata = {"kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}}
'
    
if [ ! -z "$docs_mode" ]
then
    #echo "docs mode"
    filter=$filter_docs
else
    #echo "code mode"
    filter=$filter_code
fi

for file in "$@" 
do
    if [ ! -z "$textconv" ] 
    then
        #echo "stdout"
        jq --indent 1 "$filter" "$file"
    else
        # jq doesn't support inplace edit, so we need to work around it
        jq --indent 1 "$filter" "$file" > "$file.tmp" && mv "$file.tmp" "$file"
    fi
done

